map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream p42_url_api {
    server 127.0.0.1:4000;
    keepalive 32;
}

server {
    listen 443 ssl http2;
    server_name app.p-42.fr;

    access_log /var/log/nginx/p42.fr.access.log;
    error_log  /var/log/nginx/p42.fr.error.log warn;

    root  /var/www/deeplinksAnalytics;
    index index.html;

    location /api/socket.io/ {
        proxy_pass http://p42_url_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade            $http_upgrade;
        proxy_set_header Connection         $connection_upgrade;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_read_timeout 60s;

        add_header Access-Control-Allow-Origin      $http_origin;
        add_header Access-Control-Allow-Credentials 'true';
        add_header Vary                               'Origin';
    }

    location /api/ {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,X-Requested-With';
            add_header Access-Control-Allow-Credentials 'true';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://p42_url_api;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Credentials 'true';
        add_header Vary 'Origin';
    }

        location /qr/ {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,X-Requested-With';
            add_header Access-Control-Allow-Credentials 'true';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://p42_url_api;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Credentials 'true';
        add_header Vary 'Origin';
    }

    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|json|txt|webmanifest|woff2?|map)$ {
        try_files $uri =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    location /assets/ {
        try_files $uri =404;
        expires 1h;
        add_header Cache-Control "public";
    }

    location / {
        try_files $uri $uri/ /index.html;
    }
    ssl_certificate /etc/letsencrypt/live/app.p-42.fr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.p-42.fr/privkey.pem; # managed by Certbot

    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port  443;

}

server {
    listen 443 ssl http2;
    server_name p-42.fr;

    access_log /var/log/nginx/p42.fr.access.log;
    error_log  /var/log/nginx/p42.fr.error.log warn;

    location /api/ {
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization,Content-Type,Accept,X-Requested-With';
            add_header Access-Control-Allow-Credentials 'true';
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        proxy_pass http://p42_url_api;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        add_header Access-Control-Allow-Origin $http_origin;
        add_header Access-Control-Allow-Credentials 'true';
        add_header Vary 'Origin';
    }

    location ~ ^/(?!(?:api|assets|favicon\.ico|robots\.txt|\.well-known))(?:[^/]+)$ {
        proxy_pass http://p42_url_api$request_uri;
        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
    }

    location / {
        return 301 https://app.p-42.fr$request_uri;
    }
    ssl_certificate /etc/letsencrypt/live/app.p-42.fr/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.p-42.fr/privkey.pem; # managed by Certbot

    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-Port  443;

}
