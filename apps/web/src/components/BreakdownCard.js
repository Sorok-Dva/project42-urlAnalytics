import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
const numberFormatter = new Intl.NumberFormat('fr-FR');
export const BreakdownCard = ({ title, items, maxItems = 6, emptyLabel = 'Aucune donnÃ©e', footer }) => {
    const visible = items.slice(0, maxItems);
    return (_jsxs("div", { className: "rounded-2xl border border-slate-800/70 bg-slate-900/40 p-6", children: [_jsx("h4", { className: "text-sm font-semibold text-slate-200", children: title }), visible.length === 0 ? (_jsx("p", { className: "mt-4 text-xs text-muted", children: emptyLabel })) : (_jsx("ul", { className: "mt-4 space-y-3 text-sm", children: visible.map(item => (_jsxs("li", { className: "space-y-1", children: [_jsxs("div", { className: "flex items-center justify-between gap-2", children: [_jsx("span", { className: "truncate text-slate-200", children: item.label }), _jsxs("span", { className: "whitespace-nowrap text-slate-300", children: [numberFormatter.format(item.total), " (", item.percentage.toFixed(1), "%)"] })] }), _jsx("div", { className: "h-1.5 w-full overflow-hidden rounded-full bg-slate-800/70", children: _jsx("div", { className: "h-full rounded-full bg-accent/80", style: { width: `${Math.min(100, Math.max(0, item.percentage))}%` } }) })] }, `${item.label}-${item.value ?? item.label}`))) })), footer && _jsx("div", { className: "mt-4 text-xs text-muted", children: footer })] }));
};
